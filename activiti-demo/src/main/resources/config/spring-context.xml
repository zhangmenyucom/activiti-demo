<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       classpath:/org/springframework/beans/factory/xml/spring-beans-3.0.xsd 
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd" default-lazy-init="false">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:application.properties" />
	</bean>
	<bean id="dataSourceWdb" primary="true" name="dataSourceWdb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${spring.wdb01.driverClassName}" />
		<property name="url" value="${spring.wdb01.url}" />
		<property name="username" value="${spring.wdb01.username}" />
		<property name="password" value="${spring.wdb01.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.initialSize}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxActive" value="${db.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${db.validationQuery}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${db.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}" />
	</bean>
	<bean id="dataSourceRdb" name="dataSourceRdb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${spring.rdb01.driverClassName}" />
		<property name="url" value="${spring.rdb01.url}" />
		<property name="username" value="${spring.rdb01.username}" />
		<property name="password" value="${spring.rdb01.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.initialSize}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxActive" value="${db.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${db.validationQuery}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${db.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}" />
	</bean>
	<bean id="dataSource" class="com.taylor.activiti.common.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="1" value-ref="dataSourceWdb" />
				<entry key="2" value-ref="dataSourceRdb" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceWdb" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 配置mybatis配置文件的位置 -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.taylor.activiti.entity" />
		<!-- 配置扫描Mapper XML的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.taylor.activiti.**.dao" />
	</bean>
	<!-- 配置 Annotation 驱动，定义事务 -->
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>